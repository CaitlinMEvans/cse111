CSE 111 Proposal for a Student Chosen Program

    (This is a proposal. All proposals are written with our best
    knowledge at the beginning of a project. As we progress from the
    beginning to the end of a project, we gain more knowledge, and we
    change some of our proposed ideas. This is part of completing any
    project and is fine.  However, we still must write a proposal so
    that our teachers or supervisors know what we intend to do. Please
    answer each of the following questions to the best of your
    knowledge.)

1. What is the title of your program?
Utah Big Game Draw Odds Analyzer

2. What real-world problem will your program address or help to solve?
As an avid and ethical female archery and rifle hunter, I make conscious efforts and decisions about what species to hunt and where and how I hunt, based on area populations and sustainability. Hunters in Utah often face challenges when deciding where to apply for big game tags due to varying odds, animal population trends, and location preferences. This program will help users analyze historical draw odds, filter areas based on personal preferences, and visualize trends to make informed decisions for their applications. The tool will save hunters time and effort by presenting tailored recommendations.
Hunters in Utah often face challenges when deciding where to apply for big game tags due to varying odds, animal population trends, and location preferences. This program will help users analyze historical draw odds, filter areas based on personal preferences, and visualize trends to make informed decisions for their applications. The tool will save hunters time and effort by presenting tailored recommendations.

3. What will you learn from developing this program?
I will learn how to process and analyze data using Python libraries, create visualizations to represent trends, and write reusable functions for filtering and calculations. Additionally, Iâ€™ll gain experience with testing functions using pytest and ensure they perform as expected. This project will also enhance my understanding of integrating different data sources.

4. What Python modules will your program use?


csv: For reading historical odds and population data from files.

pandas: For efficient data filtering and processing.

matplotlib: For creating visualizations of trends and comparisons.

pytest: For writing and running test functions to validate core functionality.



    (Some examples are: csv, datetime, functools, matplotlib, math,
    pandas, pytest, random, requests, and tkinter.)

5. List the names of functions you will need?

load_data(file_path): Reads data from a CSV file and returns it as a structured format (e.g., a DataFrame).

filter_data(criteria): Filters hunting areas based on user-defined criteria like species, weapon type, or region.

calculate_odds(area_id, points): Calculates personalized odds of drawing a tag based on historical data and accrued points.

get_population_estimate(area_id): Retrieves or estimates animal population for a given area.

display_visualizations(filtered_data): Creates charts or graphs to help users compare odds and trends.

get_user_input(): Collects input from the user about preferences for species, region, and other criteria.

    (Remember that the most reusable functions don't get user input and
    don't print results but instead have parameters and return a result.
    Functions that get user input and print results are important and do
    useful work but are not easily reusable.)

    (Remember also that it's hard to test functions that get user input
    and print results. It's easy to test functions that don't get user
    input and don't print results but instead have parameters and return
    a result. Therefore, you should write most of your program functions
    to have parameters and return a result.)

6. List the names of the test functions you will write.


test_calculate_odds(): Tests the accuracy of the calculate_odds function with mock data.

test_filter_data(): Ensures the filter_data function correctly filters the dataset based on input criteria.



